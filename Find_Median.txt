class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        vector <int> result;
        int size;
        int temp;
        double median;
        int middle;
        //PUSHING NUMS1 TO RESULT
        for(int i=0;i<nums1.size();i++)
        {
            result.push_back(nums1[i]);
        }
        //PUSHING NUMS2 TO RESULT
        for(int i=0;i<nums2.size();i++)
        {
            result.push_back(nums2[i]);
        }
        //SORT THE RESULT VECTOR
         for(int i=0;i<result.size();i++)
        {
            for(int j=i+1;j<result.size();j++)
            {
                if(result[i]>result[j])
                {
                   temp=result[i];
                   result[i]=result[j];
                   result[j]=temp;
                }
            }
        }
        //FINDING MEDIAN
        size=result.size();
        if(size%2==0) //FOR EVEN SIZE OF VECTOR
        {
            middle=size/2;
            median=result[middle]+result[middle-1];
            median=median/2;
        }
        else //FOR ODD SIZE
        {
            middle=size/2;
            median=result[middle];
        }
        return median;
    }
};